import { createAction } from '@reduxjs/toolkit';

{{#if isEntity}}
export const create{{ properCase name }} = createAction<{{ properCase name }}>('CREATE_{{ constantCase name }}_REQUEST');
export const create{{ properCase name }}Success = createAction<{{ properCase name }}>('CREATE_{{ constantCase name }}_SUCCESS');
export const create{{ properCase name }}Error = createAction<Error>('CREATE_{{ constantCase name }}_ERROR');

export const fetch{{ properCase name }}s = createAction<string[]>('FETCH_{{ constantCase name }}S_REQUEST');
export const fetch{{ properCase name }}sSuccess = createAction<{{ properCase name }}[]>('FETCH_{{ constantCase name }}S_SUCCESS');
export const fetch{{ properCase name }}sError = createAction<Error>('FETCH_{{ constantCase name }}S_ERROR');

export const fetch{{ properCase name }} = createAction<string>('FETCH_{{ constantCase name }}_REQUEST');
export const fetch{{ properCase name }}Success = createAction<{{ properCase name }}>('FETCH_{{ constantCase name }}_SUCCESS');
export const fetch{{ properCase name }}Error = createAction<Error>('FETCH_{{ constantCase name }}_ERROR');

export const update{{ properCase name }} = createAction<{{ properCase name }}>('UPDATE_{{ constantCase name }}_REQUEST');
export const update{{ properCase name }}Success = createAction<{{ properCase name }}>('UPDATE_{{ constantCase name }}_SUCCESS');
export const update{{ properCase name }}Error = createAction<Error>('UPDATE_{{ constantCase name }}_ERROR');

export const delete{{ properCase name }} = createAction<string>('DELETE_{{ constantCase name }}_REQUEST');
export const delete{{ properCase name }}Success = createAction<string>('DELETE_{{ constantCase name }}_SUCCESS');
export const delete{{ properCase name }}Error = createAction<Error>('DELETE_{{ constantCase name }}_ERROR');
{{/if}}
